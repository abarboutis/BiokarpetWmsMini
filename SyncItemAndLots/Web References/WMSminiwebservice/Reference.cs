//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8745
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.8745.
// 
#pragma warning disable 1591

namespace SyncItemAndLots.WMSminiwebservice {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckDBConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ItemInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenReceivesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNewReceivesTranscodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ItemInfoByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LotInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AtlSyncItemsAndLotsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AtlGeInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback LotInfoByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemPartialOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemLotPartialOperationCompleted;
        
        private System.Threading.SendOrPostCallback SyncERPItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportInventoryHeaderCTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ItemExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LotExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNewItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNewLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportInventoryCTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SqlerrorlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemMunitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSyncInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SOA_GetStoresOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInventoryStatusCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback SOA_GetItemsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SOA_GetLotsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearitemlistOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearlotlistOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTransCodeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTransCodeHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SOA_GetLotsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SOA_GetERPLotSecondQTYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransCodeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertIntoReceivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransRemainsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::SyncItemAndLots.Properties.Settings.Default.SyncItemAndLots_WMSminiwebservice_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckDBConnectionCompletedEventHandler CheckDBConnectionCompleted;
        
        /// <remarks/>
        public event ItemInfoCompletedEventHandler ItemInfoCompleted;
        
        /// <remarks/>
        public event GetOpenReceivesListCompletedEventHandler GetOpenReceivesListCompleted;
        
        /// <remarks/>
        public event InsertNewReceivesTranscodeCompletedEventHandler InsertNewReceivesTranscodeCompleted;
        
        /// <remarks/>
        public event ItemInfoByCodeCompletedEventHandler ItemInfoByCodeCompleted;
        
        /// <remarks/>
        public event LotInfoCompletedEventHandler LotInfoCompleted;
        
        /// <remarks/>
        public event AtlSyncItemsAndLotsCompletedEventHandler AtlSyncItemsAndLotsCompleted;
        
        /// <remarks/>
        public event AtlGeInventoryCompletedEventHandler AtlGeInventoryCompleted;
        
        /// <remarks/>
        public event LotInfoByCodeCompletedEventHandler LotInfoByCodeCompleted;
        
        /// <remarks/>
        public event GetItemPartialCompletedEventHandler GetItemPartialCompleted;
        
        /// <remarks/>
        public event GetItemLotPartialCompletedEventHandler GetItemLotPartialCompleted;
        
        /// <remarks/>
        public event SyncERPItemsCompletedEventHandler SyncERPItemsCompleted;
        
        /// <remarks/>
        public event ImportInventoryHeaderCTypeCompletedEventHandler ImportInventoryHeaderCTypeCompleted;
        
        /// <remarks/>
        public event ImportInventoryCompletedEventHandler ImportInventoryCompleted;
        
        /// <remarks/>
        public event ItemExistsCompletedEventHandler ItemExistsCompleted;
        
        /// <remarks/>
        public event LotExistsCompletedEventHandler LotExistsCompleted;
        
        /// <remarks/>
        public event InsertNewItemCompletedEventHandler InsertNewItemCompleted;
        
        /// <remarks/>
        public event InsertNewLotCompletedEventHandler InsertNewLotCompleted;
        
        /// <remarks/>
        public event ImportInventoryCTypeCompletedEventHandler ImportInventoryCTypeCompleted;
        
        /// <remarks/>
        public event SqlerrorlogCompletedEventHandler SqlerrorlogCompleted;
        
        /// <remarks/>
        public event GetItemMunitsCompletedEventHandler GetItemMunitsCompleted;
        
        /// <remarks/>
        public event GetSyncInfoCompletedEventHandler GetSyncInfoCompleted;
        
        /// <remarks/>
        public event SOA_GetStoresCompletedEventHandler SOA_GetStoresCompleted;
        
        /// <remarks/>
        public event UploadInventoryStatusCheckCompletedEventHandler UploadInventoryStatusCheckCompleted;
        
        /// <remarks/>
        public event SOA_GetItemsListCompletedEventHandler SOA_GetItemsListCompleted;
        
        /// <remarks/>
        public event SOA_GetLotsListCompletedEventHandler SOA_GetLotsListCompleted;
        
        /// <remarks/>
        public event ClearitemlistCompletedEventHandler ClearitemlistCompleted;
        
        /// <remarks/>
        public event ClearlotlistCompletedEventHandler ClearlotlistCompleted;
        
        /// <remarks/>
        public event InsertTransCodeDetailsCompletedEventHandler InsertTransCodeDetailsCompleted;
        
        /// <remarks/>
        public event InsertTransCodeHeaderCompletedEventHandler InsertTransCodeHeaderCompleted;
        
        /// <remarks/>
        public event SOA_GetLotsCompletedEventHandler SOA_GetLotsCompleted;
        
        /// <remarks/>
        public event SOA_GetERPLotSecondQTYCompletedEventHandler SOA_GetERPLotSecondQTYCompleted;
        
        /// <remarks/>
        public event GetTransCodeDetailsCompletedEventHandler GetTransCodeDetailsCompleted;
        
        /// <remarks/>
        public event InsertIntoReceivesCompletedEventHandler InsertIntoReceivesCompleted;
        
        /// <remarks/>
        public event GetTransRemainsCompletedEventHandler GetTransRemainsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDBConnection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckDBConnection() {
            object[] results = this.Invoke("CheckDBConnection", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDBConnectionAsync() {
            this.CheckDBConnectionAsync(null);
        }
        
        /// <remarks/>
        public void CheckDBConnectionAsync(object userState) {
            if ((this.CheckDBConnectionOperationCompleted == null)) {
                this.CheckDBConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDBConnectionOperationCompleted);
            }
            this.InvokeAsync("CheckDBConnection", new object[0], this.CheckDBConnectionOperationCompleted, userState);
        }
        
        private void OnCheckDBConnectionOperationCompleted(object arg) {
            if ((this.CheckDBConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDBConnectionCompleted(this, new CheckDBConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ItemInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TItems ItemInfo(long itemid) {
            object[] results = this.Invoke("ItemInfo", new object[] {
                        itemid});
            return ((TItems)(results[0]));
        }
        
        /// <remarks/>
        public void ItemInfoAsync(long itemid) {
            this.ItemInfoAsync(itemid, null);
        }
        
        /// <remarks/>
        public void ItemInfoAsync(long itemid, object userState) {
            if ((this.ItemInfoOperationCompleted == null)) {
                this.ItemInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnItemInfoOperationCompleted);
            }
            this.InvokeAsync("ItemInfo", new object[] {
                        itemid}, this.ItemInfoOperationCompleted, userState);
        }
        
        private void OnItemInfoOperationCompleted(object arg) {
            if ((this.ItemInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ItemInfoCompleted(this, new ItemInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOpenReceivesList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOpenReceivesList(short branchid) {
            object[] results = this.Invoke("GetOpenReceivesList", new object[] {
                        branchid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenReceivesListAsync(short branchid) {
            this.GetOpenReceivesListAsync(branchid, null);
        }
        
        /// <remarks/>
        public void GetOpenReceivesListAsync(short branchid, object userState) {
            if ((this.GetOpenReceivesListOperationCompleted == null)) {
                this.GetOpenReceivesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenReceivesListOperationCompleted);
            }
            this.InvokeAsync("GetOpenReceivesList", new object[] {
                        branchid}, this.GetOpenReceivesListOperationCompleted, userState);
        }
        
        private void OnGetOpenReceivesListOperationCompleted(object arg) {
            if ((this.GetOpenReceivesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenReceivesListCompleted(this, new GetOpenReceivesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertNewReceivesTranscode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long InsertNewReceivesTranscode(TransCodeHeader thistranscode) {
            object[] results = this.Invoke("InsertNewReceivesTranscode", new object[] {
                        thistranscode});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void InsertNewReceivesTranscodeAsync(TransCodeHeader thistranscode) {
            this.InsertNewReceivesTranscodeAsync(thistranscode, null);
        }
        
        /// <remarks/>
        public void InsertNewReceivesTranscodeAsync(TransCodeHeader thistranscode, object userState) {
            if ((this.InsertNewReceivesTranscodeOperationCompleted == null)) {
                this.InsertNewReceivesTranscodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNewReceivesTranscodeOperationCompleted);
            }
            this.InvokeAsync("InsertNewReceivesTranscode", new object[] {
                        thistranscode}, this.InsertNewReceivesTranscodeOperationCompleted, userState);
        }
        
        private void OnInsertNewReceivesTranscodeOperationCompleted(object arg) {
            if ((this.InsertNewReceivesTranscodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNewReceivesTranscodeCompleted(this, new InsertNewReceivesTranscodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ItemInfoByCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TItems ItemInfoByCode(string itemcode) {
            object[] results = this.Invoke("ItemInfoByCode", new object[] {
                        itemcode});
            return ((TItems)(results[0]));
        }
        
        /// <remarks/>
        public void ItemInfoByCodeAsync(string itemcode) {
            this.ItemInfoByCodeAsync(itemcode, null);
        }
        
        /// <remarks/>
        public void ItemInfoByCodeAsync(string itemcode, object userState) {
            if ((this.ItemInfoByCodeOperationCompleted == null)) {
                this.ItemInfoByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnItemInfoByCodeOperationCompleted);
            }
            this.InvokeAsync("ItemInfoByCode", new object[] {
                        itemcode}, this.ItemInfoByCodeOperationCompleted, userState);
        }
        
        private void OnItemInfoByCodeOperationCompleted(object arg) {
            if ((this.ItemInfoByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ItemInfoByCodeCompleted(this, new ItemInfoByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LotInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TItemLot LotInfo(long lotid) {
            object[] results = this.Invoke("LotInfo", new object[] {
                        lotid});
            return ((TItemLot)(results[0]));
        }
        
        /// <remarks/>
        public void LotInfoAsync(long lotid) {
            this.LotInfoAsync(lotid, null);
        }
        
        /// <remarks/>
        public void LotInfoAsync(long lotid, object userState) {
            if ((this.LotInfoOperationCompleted == null)) {
                this.LotInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLotInfoOperationCompleted);
            }
            this.InvokeAsync("LotInfo", new object[] {
                        lotid}, this.LotInfoOperationCompleted, userState);
        }
        
        private void OnLotInfoOperationCompleted(object arg) {
            if ((this.LotInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LotInfoCompleted(this, new LotInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AtlSyncItemsAndLots", RequestNamespace="http://tempuri.org/", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AtlSyncItemsAndLots() {
            this.Invoke("AtlSyncItemsAndLots", new object[0]);
        }
        
        /// <remarks/>
        public void AtlSyncItemsAndLotsAsync() {
            this.AtlSyncItemsAndLotsAsync(null);
        }
        
        /// <remarks/>
        public void AtlSyncItemsAndLotsAsync(object userState) {
            if ((this.AtlSyncItemsAndLotsOperationCompleted == null)) {
                this.AtlSyncItemsAndLotsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAtlSyncItemsAndLotsOperationCompleted);
            }
            this.InvokeAsync("AtlSyncItemsAndLots", new object[0], this.AtlSyncItemsAndLotsOperationCompleted, userState);
        }
        
        private void OnAtlSyncItemsAndLotsOperationCompleted(object arg) {
            if ((this.AtlSyncItemsAndLotsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AtlSyncItemsAndLotsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AtlGeInventory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AtlGeInventory(int branchid, bool forcedelete) {
            object[] results = this.Invoke("AtlGeInventory", new object[] {
                        branchid,
                        forcedelete});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AtlGeInventoryAsync(int branchid, bool forcedelete) {
            this.AtlGeInventoryAsync(branchid, forcedelete, null);
        }
        
        /// <remarks/>
        public void AtlGeInventoryAsync(int branchid, bool forcedelete, object userState) {
            if ((this.AtlGeInventoryOperationCompleted == null)) {
                this.AtlGeInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAtlGeInventoryOperationCompleted);
            }
            this.InvokeAsync("AtlGeInventory", new object[] {
                        branchid,
                        forcedelete}, this.AtlGeInventoryOperationCompleted, userState);
        }
        
        private void OnAtlGeInventoryOperationCompleted(object arg) {
            if ((this.AtlGeInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AtlGeInventoryCompleted(this, new AtlGeInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LotInfoByCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TItemLot LotInfoByCode(string lotcode, long itemid) {
            object[] results = this.Invoke("LotInfoByCode", new object[] {
                        lotcode,
                        itemid});
            return ((TItemLot)(results[0]));
        }
        
        /// <remarks/>
        public void LotInfoByCodeAsync(string lotcode, long itemid) {
            this.LotInfoByCodeAsync(lotcode, itemid, null);
        }
        
        /// <remarks/>
        public void LotInfoByCodeAsync(string lotcode, long itemid, object userState) {
            if ((this.LotInfoByCodeOperationCompleted == null)) {
                this.LotInfoByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLotInfoByCodeOperationCompleted);
            }
            this.InvokeAsync("LotInfoByCode", new object[] {
                        lotcode,
                        itemid}, this.LotInfoByCodeOperationCompleted, userState);
        }
        
        private void OnLotInfoByCodeOperationCompleted(object arg) {
            if ((this.LotInfoByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LotInfoByCodeCompleted(this, new LotInfoByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemPartial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetItemPartial(long startid, long endid) {
            object[] results = this.Invoke("GetItemPartial", new object[] {
                        startid,
                        endid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemPartialAsync(long startid, long endid) {
            this.GetItemPartialAsync(startid, endid, null);
        }
        
        /// <remarks/>
        public void GetItemPartialAsync(long startid, long endid, object userState) {
            if ((this.GetItemPartialOperationCompleted == null)) {
                this.GetItemPartialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemPartialOperationCompleted);
            }
            this.InvokeAsync("GetItemPartial", new object[] {
                        startid,
                        endid}, this.GetItemPartialOperationCompleted, userState);
        }
        
        private void OnGetItemPartialOperationCompleted(object arg) {
            if ((this.GetItemPartialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemPartialCompleted(this, new GetItemPartialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemLotPartial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetItemLotPartial(long startid, long endid) {
            object[] results = this.Invoke("GetItemLotPartial", new object[] {
                        startid,
                        endid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemLotPartialAsync(long startid, long endid) {
            this.GetItemLotPartialAsync(startid, endid, null);
        }
        
        /// <remarks/>
        public void GetItemLotPartialAsync(long startid, long endid, object userState) {
            if ((this.GetItemLotPartialOperationCompleted == null)) {
                this.GetItemLotPartialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemLotPartialOperationCompleted);
            }
            this.InvokeAsync("GetItemLotPartial", new object[] {
                        startid,
                        endid}, this.GetItemLotPartialOperationCompleted, userState);
        }
        
        private void OnGetItemLotPartialOperationCompleted(object arg) {
            if ((this.GetItemLotPartialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemLotPartialCompleted(this, new GetItemLotPartialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SyncERPItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SyncERPItems() {
            object[] results = this.Invoke("SyncERPItems", new object[0]);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SyncERPItemsAsync() {
            this.SyncERPItemsAsync(null);
        }
        
        /// <remarks/>
        public void SyncERPItemsAsync(object userState) {
            if ((this.SyncERPItemsOperationCompleted == null)) {
                this.SyncERPItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncERPItemsOperationCompleted);
            }
            this.InvokeAsync("SyncERPItems", new object[0], this.SyncERPItemsOperationCompleted, userState);
        }
        
        private void OnSyncERPItemsOperationCompleted(object arg) {
            if ((this.SyncERPItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncERPItemsCompleted(this, new SyncERPItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportInventoryHeaderCType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ImportInventoryHeaderCType(TInventoryHeader invhdr) {
            object[] results = this.Invoke("ImportInventoryHeaderCType", new object[] {
                        invhdr});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ImportInventoryHeaderCTypeAsync(TInventoryHeader invhdr) {
            this.ImportInventoryHeaderCTypeAsync(invhdr, null);
        }
        
        /// <remarks/>
        public void ImportInventoryHeaderCTypeAsync(TInventoryHeader invhdr, object userState) {
            if ((this.ImportInventoryHeaderCTypeOperationCompleted == null)) {
                this.ImportInventoryHeaderCTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportInventoryHeaderCTypeOperationCompleted);
            }
            this.InvokeAsync("ImportInventoryHeaderCType", new object[] {
                        invhdr}, this.ImportInventoryHeaderCTypeOperationCompleted, userState);
        }
        
        private void OnImportInventoryHeaderCTypeOperationCompleted(object arg) {
            if ((this.ImportInventoryHeaderCTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportInventoryHeaderCTypeCompleted(this, new ImportInventoryHeaderCTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportInventory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ImportInventory(System.Data.DataSet ds) {
            object[] results = this.Invoke("ImportInventory", new object[] {
                        ds});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ImportInventoryAsync(System.Data.DataSet ds) {
            this.ImportInventoryAsync(ds, null);
        }
        
        /// <remarks/>
        public void ImportInventoryAsync(System.Data.DataSet ds, object userState) {
            if ((this.ImportInventoryOperationCompleted == null)) {
                this.ImportInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportInventoryOperationCompleted);
            }
            this.InvokeAsync("ImportInventory", new object[] {
                        ds}, this.ImportInventoryOperationCompleted, userState);
        }
        
        private void OnImportInventoryOperationCompleted(object arg) {
            if ((this.ImportInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportInventoryCompleted(this, new ImportInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ItemExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ItemExists(long itemid) {
            object[] results = this.Invoke("ItemExists", new object[] {
                        itemid});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ItemExistsAsync(long itemid) {
            this.ItemExistsAsync(itemid, null);
        }
        
        /// <remarks/>
        public void ItemExistsAsync(long itemid, object userState) {
            if ((this.ItemExistsOperationCompleted == null)) {
                this.ItemExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnItemExistsOperationCompleted);
            }
            this.InvokeAsync("ItemExists", new object[] {
                        itemid}, this.ItemExistsOperationCompleted, userState);
        }
        
        private void OnItemExistsOperationCompleted(object arg) {
            if ((this.ItemExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ItemExistsCompleted(this, new ItemExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LotExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long LotExists(long lotid) {
            object[] results = this.Invoke("LotExists", new object[] {
                        lotid});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void LotExistsAsync(long lotid) {
            this.LotExistsAsync(lotid, null);
        }
        
        /// <remarks/>
        public void LotExistsAsync(long lotid, object userState) {
            if ((this.LotExistsOperationCompleted == null)) {
                this.LotExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLotExistsOperationCompleted);
            }
            this.InvokeAsync("LotExists", new object[] {
                        lotid}, this.LotExistsOperationCompleted, userState);
        }
        
        private void OnLotExistsOperationCompleted(object arg) {
            if ((this.LotExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LotExistsCompleted(this, new LotExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertNewItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long InsertNewItem(ERPItem newitem) {
            object[] results = this.Invoke("InsertNewItem", new object[] {
                        newitem});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void InsertNewItemAsync(ERPItem newitem) {
            this.InsertNewItemAsync(newitem, null);
        }
        
        /// <remarks/>
        public void InsertNewItemAsync(ERPItem newitem, object userState) {
            if ((this.InsertNewItemOperationCompleted == null)) {
                this.InsertNewItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNewItemOperationCompleted);
            }
            this.InvokeAsync("InsertNewItem", new object[] {
                        newitem}, this.InsertNewItemOperationCompleted, userState);
        }
        
        private void OnInsertNewItemOperationCompleted(object arg) {
            if ((this.InsertNewItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNewItemCompleted(this, new InsertNewItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertNewLot", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long InsertNewLot(ERPLot newlot) {
            object[] results = this.Invoke("InsertNewLot", new object[] {
                        newlot});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void InsertNewLotAsync(ERPLot newlot) {
            this.InsertNewLotAsync(newlot, null);
        }
        
        /// <remarks/>
        public void InsertNewLotAsync(ERPLot newlot, object userState) {
            if ((this.InsertNewLotOperationCompleted == null)) {
                this.InsertNewLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNewLotOperationCompleted);
            }
            this.InvokeAsync("InsertNewLot", new object[] {
                        newlot}, this.InsertNewLotOperationCompleted, userState);
        }
        
        private void OnInsertNewLotOperationCompleted(object arg) {
            if ((this.InsertNewLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNewLotCompleted(this, new InsertNewLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportInventoryCType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ImportInventoryCType(TInventory[] inv, bool clearprevious) {
            object[] results = this.Invoke("ImportInventoryCType", new object[] {
                        inv,
                        clearprevious});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ImportInventoryCTypeAsync(TInventory[] inv, bool clearprevious) {
            this.ImportInventoryCTypeAsync(inv, clearprevious, null);
        }
        
        /// <remarks/>
        public void ImportInventoryCTypeAsync(TInventory[] inv, bool clearprevious, object userState) {
            if ((this.ImportInventoryCTypeOperationCompleted == null)) {
                this.ImportInventoryCTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportInventoryCTypeOperationCompleted);
            }
            this.InvokeAsync("ImportInventoryCType", new object[] {
                        inv,
                        clearprevious}, this.ImportInventoryCTypeOperationCompleted, userState);
        }
        
        private void OnImportInventoryCTypeOperationCompleted(object arg) {
            if ((this.ImportInventoryCTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportInventoryCTypeCompleted(this, new ImportInventoryCTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Sqlerrorlog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long Sqlerrorlog() {
            object[] results = this.Invoke("Sqlerrorlog", new object[0]);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SqlerrorlogAsync() {
            this.SqlerrorlogAsync(null);
        }
        
        /// <remarks/>
        public void SqlerrorlogAsync(object userState) {
            if ((this.SqlerrorlogOperationCompleted == null)) {
                this.SqlerrorlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSqlerrorlogOperationCompleted);
            }
            this.InvokeAsync("Sqlerrorlog", new object[0], this.SqlerrorlogOperationCompleted, userState);
        }
        
        private void OnSqlerrorlogOperationCompleted(object arg) {
            if ((this.SqlerrorlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SqlerrorlogCompleted(this, new SqlerrorlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemMunits", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetItemMunits() {
            object[] results = this.Invoke("GetItemMunits", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemMunitsAsync() {
            this.GetItemMunitsAsync(null);
        }
        
        /// <remarks/>
        public void GetItemMunitsAsync(object userState) {
            if ((this.GetItemMunitsOperationCompleted == null)) {
                this.GetItemMunitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemMunitsOperationCompleted);
            }
            this.InvokeAsync("GetItemMunits", new object[0], this.GetItemMunitsOperationCompleted, userState);
        }
        
        private void OnGetItemMunitsOperationCompleted(object arg) {
            if ((this.GetItemMunitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemMunitsCompleted(this, new GetItemMunitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSyncInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SyncInfo GetSyncInfo() {
            object[] results = this.Invoke("GetSyncInfo", new object[0]);
            return ((SyncInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetSyncInfoAsync() {
            this.GetSyncInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetSyncInfoAsync(object userState) {
            if ((this.GetSyncInfoOperationCompleted == null)) {
                this.GetSyncInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSyncInfoOperationCompleted);
            }
            this.InvokeAsync("GetSyncInfo", new object[0], this.GetSyncInfoOperationCompleted, userState);
        }
        
        private void OnGetSyncInfoOperationCompleted(object arg) {
            if ((this.GetSyncInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSyncInfoCompleted(this, new GetSyncInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SOA_GetStores", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SOA_GetStores() {
            object[] results = this.Invoke("SOA_GetStores", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SOA_GetStoresAsync() {
            this.SOA_GetStoresAsync(null);
        }
        
        /// <remarks/>
        public void SOA_GetStoresAsync(object userState) {
            if ((this.SOA_GetStoresOperationCompleted == null)) {
                this.SOA_GetStoresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSOA_GetStoresOperationCompleted);
            }
            this.InvokeAsync("SOA_GetStores", new object[0], this.SOA_GetStoresOperationCompleted, userState);
        }
        
        private void OnSOA_GetStoresOperationCompleted(object arg) {
            if ((this.SOA_GetStoresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SOA_GetStoresCompleted(this, new SOA_GetStoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadInventoryStatusCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultWithMessage UploadInventoryStatusCheck(TInventoryHeader invhdr) {
            object[] results = this.Invoke("UploadInventoryStatusCheck", new object[] {
                        invhdr});
            return ((ResultWithMessage)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInventoryStatusCheckAsync(TInventoryHeader invhdr) {
            this.UploadInventoryStatusCheckAsync(invhdr, null);
        }
        
        /// <remarks/>
        public void UploadInventoryStatusCheckAsync(TInventoryHeader invhdr, object userState) {
            if ((this.UploadInventoryStatusCheckOperationCompleted == null)) {
                this.UploadInventoryStatusCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInventoryStatusCheckOperationCompleted);
            }
            this.InvokeAsync("UploadInventoryStatusCheck", new object[] {
                        invhdr}, this.UploadInventoryStatusCheckOperationCompleted, userState);
        }
        
        private void OnUploadInventoryStatusCheckOperationCompleted(object arg) {
            if ((this.UploadInventoryStatusCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInventoryStatusCheckCompleted(this, new UploadInventoryStatusCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SOA_GetItemsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ERPItem[] SOA_GetItemsList(int storeid, long startindex, long endindex) {
            object[] results = this.Invoke("SOA_GetItemsList", new object[] {
                        storeid,
                        startindex,
                        endindex});
            return ((ERPItem[])(results[0]));
        }
        
        /// <remarks/>
        public void SOA_GetItemsListAsync(int storeid, long startindex, long endindex) {
            this.SOA_GetItemsListAsync(storeid, startindex, endindex, null);
        }
        
        /// <remarks/>
        public void SOA_GetItemsListAsync(int storeid, long startindex, long endindex, object userState) {
            if ((this.SOA_GetItemsListOperationCompleted == null)) {
                this.SOA_GetItemsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSOA_GetItemsListOperationCompleted);
            }
            this.InvokeAsync("SOA_GetItemsList", new object[] {
                        storeid,
                        startindex,
                        endindex}, this.SOA_GetItemsListOperationCompleted, userState);
        }
        
        private void OnSOA_GetItemsListOperationCompleted(object arg) {
            if ((this.SOA_GetItemsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SOA_GetItemsListCompleted(this, new SOA_GetItemsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SOA_GetLotsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ERPLot[] SOA_GetLotsList(int storeid, long startindex, long endindex) {
            object[] results = this.Invoke("SOA_GetLotsList", new object[] {
                        storeid,
                        startindex,
                        endindex});
            return ((ERPLot[])(results[0]));
        }
        
        /// <remarks/>
        public void SOA_GetLotsListAsync(int storeid, long startindex, long endindex) {
            this.SOA_GetLotsListAsync(storeid, startindex, endindex, null);
        }
        
        /// <remarks/>
        public void SOA_GetLotsListAsync(int storeid, long startindex, long endindex, object userState) {
            if ((this.SOA_GetLotsListOperationCompleted == null)) {
                this.SOA_GetLotsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSOA_GetLotsListOperationCompleted);
            }
            this.InvokeAsync("SOA_GetLotsList", new object[] {
                        storeid,
                        startindex,
                        endindex}, this.SOA_GetLotsListOperationCompleted, userState);
        }
        
        private void OnSOA_GetLotsListOperationCompleted(object arg) {
            if ((this.SOA_GetLotsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SOA_GetLotsListCompleted(this, new SOA_GetLotsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Clearitemlist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long Clearitemlist() {
            object[] results = this.Invoke("Clearitemlist", new object[0]);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ClearitemlistAsync() {
            this.ClearitemlistAsync(null);
        }
        
        /// <remarks/>
        public void ClearitemlistAsync(object userState) {
            if ((this.ClearitemlistOperationCompleted == null)) {
                this.ClearitemlistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearitemlistOperationCompleted);
            }
            this.InvokeAsync("Clearitemlist", new object[0], this.ClearitemlistOperationCompleted, userState);
        }
        
        private void OnClearitemlistOperationCompleted(object arg) {
            if ((this.ClearitemlistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearitemlistCompleted(this, new ClearitemlistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Clearlotlist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long Clearlotlist() {
            object[] results = this.Invoke("Clearlotlist", new object[0]);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ClearlotlistAsync() {
            this.ClearlotlistAsync(null);
        }
        
        /// <remarks/>
        public void ClearlotlistAsync(object userState) {
            if ((this.ClearlotlistOperationCompleted == null)) {
                this.ClearlotlistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearlotlistOperationCompleted);
            }
            this.InvokeAsync("Clearlotlist", new object[0], this.ClearlotlistOperationCompleted, userState);
        }
        
        private void OnClearlotlistOperationCompleted(object arg) {
            if ((this.ClearlotlistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearlotlistCompleted(this, new ClearlotlistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTransCodeDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertTransCodeDetails(TransCodeDetail[] ldtl) {
            object[] results = this.Invoke("InsertTransCodeDetails", new object[] {
                        ldtl});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTransCodeDetailsAsync(TransCodeDetail[] ldtl) {
            this.InsertTransCodeDetailsAsync(ldtl, null);
        }
        
        /// <remarks/>
        public void InsertTransCodeDetailsAsync(TransCodeDetail[] ldtl, object userState) {
            if ((this.InsertTransCodeDetailsOperationCompleted == null)) {
                this.InsertTransCodeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTransCodeDetailsOperationCompleted);
            }
            this.InvokeAsync("InsertTransCodeDetails", new object[] {
                        ldtl}, this.InsertTransCodeDetailsOperationCompleted, userState);
        }
        
        private void OnInsertTransCodeDetailsOperationCompleted(object arg) {
            if ((this.InsertTransCodeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTransCodeDetailsCompleted(this, new InsertTransCodeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTransCodeHeader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long InsertTransCodeHeader(TransCodeHeader t) {
            object[] results = this.Invoke("InsertTransCodeHeader", new object[] {
                        t});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTransCodeHeaderAsync(TransCodeHeader t) {
            this.InsertTransCodeHeaderAsync(t, null);
        }
        
        /// <remarks/>
        public void InsertTransCodeHeaderAsync(TransCodeHeader t, object userState) {
            if ((this.InsertTransCodeHeaderOperationCompleted == null)) {
                this.InsertTransCodeHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTransCodeHeaderOperationCompleted);
            }
            this.InvokeAsync("InsertTransCodeHeader", new object[] {
                        t}, this.InsertTransCodeHeaderOperationCompleted, userState);
        }
        
        private void OnInsertTransCodeHeaderOperationCompleted(object arg) {
            if ((this.InsertTransCodeHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTransCodeHeaderCompleted(this, new InsertTransCodeHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SOA_GetLots", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SOA_GetLots(int storeid, long startid, long endid) {
            object[] results = this.Invoke("SOA_GetLots", new object[] {
                        storeid,
                        startid,
                        endid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SOA_GetLotsAsync(int storeid, long startid, long endid) {
            this.SOA_GetLotsAsync(storeid, startid, endid, null);
        }
        
        /// <remarks/>
        public void SOA_GetLotsAsync(int storeid, long startid, long endid, object userState) {
            if ((this.SOA_GetLotsOperationCompleted == null)) {
                this.SOA_GetLotsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSOA_GetLotsOperationCompleted);
            }
            this.InvokeAsync("SOA_GetLots", new object[] {
                        storeid,
                        startid,
                        endid}, this.SOA_GetLotsOperationCompleted, userState);
        }
        
        private void OnSOA_GetLotsOperationCompleted(object arg) {
            if ((this.SOA_GetLotsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SOA_GetLotsCompleted(this, new SOA_GetLotsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SOA_GetERPLotSecondQTY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal SOA_GetERPLotSecondQTY(long lotid, int branchid) {
            object[] results = this.Invoke("SOA_GetERPLotSecondQTY", new object[] {
                        lotid,
                        branchid});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void SOA_GetERPLotSecondQTYAsync(long lotid, int branchid) {
            this.SOA_GetERPLotSecondQTYAsync(lotid, branchid, null);
        }
        
        /// <remarks/>
        public void SOA_GetERPLotSecondQTYAsync(long lotid, int branchid, object userState) {
            if ((this.SOA_GetERPLotSecondQTYOperationCompleted == null)) {
                this.SOA_GetERPLotSecondQTYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSOA_GetERPLotSecondQTYOperationCompleted);
            }
            this.InvokeAsync("SOA_GetERPLotSecondQTY", new object[] {
                        lotid,
                        branchid}, this.SOA_GetERPLotSecondQTYOperationCompleted, userState);
        }
        
        private void OnSOA_GetERPLotSecondQTYOperationCompleted(object arg) {
            if ((this.SOA_GetERPLotSecondQTYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SOA_GetERPLotSecondQTYCompleted(this, new SOA_GetERPLotSecondQTYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransCodeDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransCodeDetail GetTransCodeDetails(string zbarcode) {
            object[] results = this.Invoke("GetTransCodeDetails", new object[] {
                        zbarcode});
            return ((TransCodeDetail)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransCodeDetailsAsync(string zbarcode) {
            this.GetTransCodeDetailsAsync(zbarcode, null);
        }
        
        /// <remarks/>
        public void GetTransCodeDetailsAsync(string zbarcode, object userState) {
            if ((this.GetTransCodeDetailsOperationCompleted == null)) {
                this.GetTransCodeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransCodeDetailsOperationCompleted);
            }
            this.InvokeAsync("GetTransCodeDetails", new object[] {
                        zbarcode}, this.GetTransCodeDetailsOperationCompleted, userState);
        }
        
        private void OnGetTransCodeDetailsOperationCompleted(object arg) {
            if ((this.GetTransCodeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransCodeDetailsCompleted(this, new GetTransCodeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertIntoReceives", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable InsertIntoReceives(TransCodeDetail treceive) {
            object[] results = this.Invoke("InsertIntoReceives", new object[] {
                        treceive});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void InsertIntoReceivesAsync(TransCodeDetail treceive) {
            this.InsertIntoReceivesAsync(treceive, null);
        }
        
        /// <remarks/>
        public void InsertIntoReceivesAsync(TransCodeDetail treceive, object userState) {
            if ((this.InsertIntoReceivesOperationCompleted == null)) {
                this.InsertIntoReceivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertIntoReceivesOperationCompleted);
            }
            this.InvokeAsync("InsertIntoReceives", new object[] {
                        treceive}, this.InsertIntoReceivesOperationCompleted, userState);
        }
        
        private void OnInsertIntoReceivesOperationCompleted(object arg) {
            if ((this.InsertIntoReceivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertIntoReceivesCompleted(this, new InsertIntoReceivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransRemains", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTransRemains(long ftrid) {
            object[] results = this.Invoke("GetTransRemains", new object[] {
                        ftrid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransRemainsAsync(long ftrid) {
            this.GetTransRemainsAsync(ftrid, null);
        }
        
        /// <remarks/>
        public void GetTransRemainsAsync(long ftrid, object userState) {
            if ((this.GetTransRemainsOperationCompleted == null)) {
                this.GetTransRemainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransRemainsOperationCompleted);
            }
            this.InvokeAsync("GetTransRemains", new object[] {
                        ftrid}, this.GetTransRemainsOperationCompleted, userState);
        }
        
        private void OnGetTransRemainsOperationCompleted(object arg) {
            if ((this.GetTransRemainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransRemainsCompleted(this, new GetTransRemainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.8745")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TItems {
        
        private long itemidField;
        
        private short compidField;
        
        private string itemcodeField;
        
        private long productidField;
        
        private string itemdescField;
        
        private int groupitemidField;
        
        private int mainitemcatidField;
        
        private int subitemcatidField;
        
        private int manufactureidField;
        
        private decimal stocklevelqtyField;
        
        private decimal stocklevelmunitField;
        
        private short munitprimaryField;
        
        private string munitprimarydescrField;
        
        private short munitprimarydecimalsField;
        
        private short munitsecondaryField;
        
        private string munitsecondarydescrField;
        
        private short munitsecondarydecimalsField;
        
        private decimal munitsrelationField;
        
        private short munitputawayField;
        
        private decimal munitsputawayrelationField;
        
        private short munitweightField;
        
        private decimal munitweightrelationField;
        
        private int wmszoneField;
        
        private short replenishmenttypeField;
        
        private long erpitemidField;
        
        private string erpitemcodeField;
        
        private int accountclassidField;
        
        private bool haslengthField;
        
        private bool hascolorField;
        
        private long stocklevelqtywcolorField;
        
        private decimal replitemlengthField;
        
        private decimal standardlengthField;
        
        private bool enabledField;
        
        private bool autoprodscheduleField;
        
        private string dimensionsField;
        
        private string dbreccreatedateField;
        
        private int dbreccreateuserField;
        
        private string dbreccreatehostField;
        
        private string dbrecmoddateField;
        
        private int dbrecmoduserField;
        
        private string dbrecmodhostField;
        
        /// <remarks/>
        public long itemid {
            get {
                return this.itemidField;
            }
            set {
                this.itemidField = value;
            }
        }
        
        /// <remarks/>
        public short compid {
            get {
                return this.compidField;
            }
            set {
                this.compidField = value;
            }
        }
        
        /// <remarks/>
        public string itemcode {
            get {
                return this.itemcodeField;
            }
            set {
                this.itemcodeField = value;
            }
        }
        
        /// <remarks/>
        public long productid {
            get {
                return this.productidField;
            }
            set {
                this.productidField = value;
            }
        }
        
        /// <remarks/>
        public string itemdesc {
            get {
                return this.itemdescField;
            }
            set {
                this.itemdescField = value;
            }
        }
        
        /// <remarks/>
        public int groupitemid {
            get {
                return this.groupitemidField;
            }
            set {
                this.groupitemidField = value;
            }
        }
        
        /// <remarks/>
        public int mainitemcatid {
            get {
                return this.mainitemcatidField;
            }
            set {
                this.mainitemcatidField = value;
            }
        }
        
        /// <remarks/>
        public int subitemcatid {
            get {
                return this.subitemcatidField;
            }
            set {
                this.subitemcatidField = value;
            }
        }
        
        /// <remarks/>
        public int manufactureid {
            get {
                return this.manufactureidField;
            }
            set {
                this.manufactureidField = value;
            }
        }
        
        /// <remarks/>
        public decimal stocklevelqty {
            get {
                return this.stocklevelqtyField;
            }
            set {
                this.stocklevelqtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal stocklevelmunit {
            get {
                return this.stocklevelmunitField;
            }
            set {
                this.stocklevelmunitField = value;
            }
        }
        
        /// <remarks/>
        public short munitprimary {
            get {
                return this.munitprimaryField;
            }
            set {
                this.munitprimaryField = value;
            }
        }
        
        /// <remarks/>
        public string munitprimarydescr {
            get {
                return this.munitprimarydescrField;
            }
            set {
                this.munitprimarydescrField = value;
            }
        }
        
        /// <remarks/>
        public short munitprimarydecimals {
            get {
                return this.munitprimarydecimalsField;
            }
            set {
                this.munitprimarydecimalsField = value;
            }
        }
        
        /// <remarks/>
        public short munitsecondary {
            get {
                return this.munitsecondaryField;
            }
            set {
                this.munitsecondaryField = value;
            }
        }
        
        /// <remarks/>
        public string munitsecondarydescr {
            get {
                return this.munitsecondarydescrField;
            }
            set {
                this.munitsecondarydescrField = value;
            }
        }
        
        /// <remarks/>
        public short munitsecondarydecimals {
            get {
                return this.munitsecondarydecimalsField;
            }
            set {
                this.munitsecondarydecimalsField = value;
            }
        }
        
        /// <remarks/>
        public decimal munitsrelation {
            get {
                return this.munitsrelationField;
            }
            set {
                this.munitsrelationField = value;
            }
        }
        
        /// <remarks/>
        public short munitputaway {
            get {
                return this.munitputawayField;
            }
            set {
                this.munitputawayField = value;
            }
        }
        
        /// <remarks/>
        public decimal munitsputawayrelation {
            get {
                return this.munitsputawayrelationField;
            }
            set {
                this.munitsputawayrelationField = value;
            }
        }
        
        /// <remarks/>
        public short munitweight {
            get {
                return this.munitweightField;
            }
            set {
                this.munitweightField = value;
            }
        }
        
        /// <remarks/>
        public decimal munitweightrelation {
            get {
                return this.munitweightrelationField;
            }
            set {
                this.munitweightrelationField = value;
            }
        }
        
        /// <remarks/>
        public int wmszone {
            get {
                return this.wmszoneField;
            }
            set {
                this.wmszoneField = value;
            }
        }
        
        /// <remarks/>
        public short replenishmenttype {
            get {
                return this.replenishmenttypeField;
            }
            set {
                this.replenishmenttypeField = value;
            }
        }
        
        /// <remarks/>
        public long erpitemid {
            get {
                return this.erpitemidField;
            }
            set {
                this.erpitemidField = value;
            }
        }
        
        /// <remarks/>
        public string erpitemcode {
            get {
                return this.erpitemcodeField;
            }
            set {
                this.erpitemcodeField = value;
            }
        }
        
        /// <remarks/>
        public int accountclassid {
            get {
                return this.accountclassidField;
            }
            set {
                this.accountclassidField = value;
            }
        }
        
        /// <remarks/>
        public bool haslength {
            get {
                return this.haslengthField;
            }
            set {
                this.haslengthField = value;
            }
        }
        
        /// <remarks/>
        public bool hascolor {
            get {
                return this.hascolorField;
            }
            set {
                this.hascolorField = value;
            }
        }
        
        /// <remarks/>
        public long stocklevelqtywcolor {
            get {
                return this.stocklevelqtywcolorField;
            }
            set {
                this.stocklevelqtywcolorField = value;
            }
        }
        
        /// <remarks/>
        public decimal replitemlength {
            get {
                return this.replitemlengthField;
            }
            set {
                this.replitemlengthField = value;
            }
        }
        
        /// <remarks/>
        public decimal standardlength {
            get {
                return this.standardlengthField;
            }
            set {
                this.standardlengthField = value;
            }
        }
        
        /// <remarks/>
        public bool enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public bool autoprodschedule {
            get {
                return this.autoprodscheduleField;
            }
            set {
                this.autoprodscheduleField = value;
            }
        }
        
        /// <remarks/>
        public string dimensions {
            get {
                return this.dimensionsField;
            }
            set {
                this.dimensionsField = value;
            }
        }
        
        /// <remarks/>
        public string dbreccreatedate {
            get {
                return this.dbreccreatedateField;
            }
            set {
                this.dbreccreatedateField = value;
            }
        }
        
        /// <remarks/>
        public int dbreccreateuser {
            get {
                return this.dbreccreateuserField;
            }
            set {
                this.dbreccreateuserField = value;
            }
        }
        
        /// <remarks/>
        public string dbreccreatehost {
            get {
                return this.dbreccreatehostField;
            }
            set {
                this.dbreccreatehostField = value;
            }
        }
        
        /// <remarks/>
        public string dbrecmoddate {
            get {
                return this.dbrecmoddateField;
            }
            set {
                this.dbrecmoddateField = value;
            }
        }
        
        /// <remarks/>
        public int dbrecmoduser {
            get {
                return this.dbrecmoduserField;
            }
            set {
                this.dbrecmoduserField = value;
            }
        }
        
        /// <remarks/>
        public string dbrecmodhost {
            get {
                return this.dbrecmodhostField;
            }
            set {
                this.dbrecmodhostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.8745")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://WMSSyncService.intranet.albio.gr/")]
    public partial class TransCodeDetail {
        
        private long ftrIDField;
        
        private long transIDField;
        
        private long receiveIDField;
        
        private long itemIDField;
        
        private long lotIDField;
        
        private int munitprimaryField;
        
        private int munitsecondaryField;
        
        private decimal itemQtyPrimaryField;
        
        private decimal itemQtySecondaryField;
        
        private decimal zwidthField;
        
        private decimal zlengthField;
        
        private string zcolorField;
        
        private string zdraftField;
        
        private string lotcodeField;
        
        private string itemcodeField;
        
        private string itemdescField;
        
        /// <remarks/>
        public long FtrID {
            get {
                return this.ftrIDField;
            }
            set {
                this.ftrIDField = value;
            }
        }
        
        /// <remarks/>
        public long TransID {
            get {
                return this.transIDField;
            }
            set {
                this.transIDField = value;
            }
        }
        
        /// <remarks/>
        public long ReceiveID {
            get {
                return this.receiveIDField;
            }
            set {
                this.receiveIDField = value;
            }
        }
        
        /// <remarks/>
        public long ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        public long LotID {
            get {
                return this.lotIDField;
            }
            set {
                this.lotIDField = value;
            }
        }
        
        /// <remarks/>
        public int munitprimary {
            get {
                return this.munitprimaryField;
            }
            set {
                this.munitprimaryField = value;
            }
        }
        
        /// <remarks/>
        public int munitsecondary {
            get {
                return this.munitsecondaryField;
            }
            set {
                this.munitsecondaryField = value;
            }
        }
        
        /// <remarks/>
        public decimal ItemQtyPrimary {
            get {
                return this.itemQtyPrimaryField;
            }
            set {
                this.itemQtyPrimaryField = value;
            }
        }
        
        /// <remarks/>
        public decimal ItemQtySecondary {
            get {
                return this.itemQtySecondaryField;
            }
            set {
                this.itemQtySecondaryField = value;
            }
        }
        
        /// <remarks/>
        public decimal Zwidth {
            get {
                return this.zwidthField;
            }
            set {
                this.zwidthField = value;
            }
        }
        
        /// <remarks/>
        public decimal Zlength {
            get {
                return this.zlengthField;
            }
            set {
                this.zlengthField = value;
            }
        }
        
        /// <remarks/>
        public string zcolor {
            get {
                return this.zcolorField;
            }
            set {
                this.zcolorField = value;
            }
        }
        
        /// <remarks/>
        public string zdraft {
            get {
                return this.zdraftField;
            }
            set {
                this.zdraftField = value;
            }
        }
        
        /// <remarks/>
        public string lotcode {
            get {
                return this.lotcodeField;
            }
            set {
                this.lotcodeField = value;
            }
        }
        
        /// <remarks/>
        public string itemcode {
            get {
                return this.itemcodeField;
            }
            set {
                this.itemcodeField = value;
            }
        }
        
        /// <remarks/>
        public string itemdesc {
            get {
                return this.itemdescField;
            }
            set {
                this.itemdescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.8745")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ResultWithMessage {
        
        private bool posresultField;
        
        private long resultnoField;
        
        private string successmessageField;
        
        private string errormessageField;
        
        /// <remarks/>
        public bool posresult {
            get {
                return this.posresultField;
            }
            set {
                this.posresultField = value;
            }
        }
        
        /// <remarks/>
        public long resultno {
            get {
                return this.resultnoField;
            }
            set {
                this.resultnoField = value;
            }
        }
        
        /// <remarks/>
        public string successmessage {
            get {
                return this.successmessageField;
            }
            set {
                this.successmessageField = value;
            }
        }
        
        /// <remarks/>
        public string errormessage {
            get {
                return this.errormessageField;
            }
            set {
                this.errormessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.8745")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SyncInfo {
        
        private long minItemIDField;
        
        private long maxItemIDField;
        
        private long itemsRowsCountField;
        
        private long minLotIDField;
        
        private long maxLotIDField;
        
        private long lotRowsCountField;
        
        private string commentsField;
        
        /// <remarks/>
        public long MinItemID {
            get {
                return this.minItemIDField;
            }
            set {
                this.minItemIDField = value;
            }
        }
        
        /// <remarks/>
        public long MaxItemID {
            get {
                return this.maxItemIDField;
            }
            set {
                this.maxItemIDField = value;
            }
        }
        
        /// <remarks/>
        public long ItemsRowsCount {
            get {
                return this.itemsRowsCountField;
            }
            set {
                this.itemsRowsCountField = value;
            }
        }
        
        /// <remarks/>
        public long MinLotID {
            get {
                return this.minLotIDField;
            }
            set {
                this.minLotIDField = value;
            }
        }
        
        /// <remarks/>
        public long MaxLotID {
            get {
                return this.maxLotIDField;
            }
            set {
                this.maxLotIDField = value;
            }
        }
        
        /// <remarks/>
        public long LotRowsCount {
            get {
                return this.lotRowsCountField;
            }
            set {
                this.lotRowsCountField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.8745")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TInventory {
        
        private long invIDField;
        
        private short compIDField;
        
        private short branchIDField;
        
        private int storeIDField;
        
        private long invHdrIDField;
        
        private long invHdrIDServerField;
        
        private long itemIDField;
        
        private string itemCodeField;
        
        private long lotIDField;
        
        private string lotCodeField;
        
        private string invDateField;
        
        private short mUnitPrimaryField;
        
        private decimal invQtyField;
        
        private decimal eRPQtyField;
        
        private short mUnitSecondaryField;
        
        private decimal invQtySecondaryField;
        
        private string serialNumberField;
        
        private long mobInvIDField;
        
        /// <remarks/>
        public long InvID {
            get {
                return this.invIDField;
            }
            set {
                this.invIDField = value;
            }
        }
        
        /// <remarks/>
        public short CompID {
            get {
                return this.compIDField;
            }
            set {
                this.compIDField = value;
            }
        }
        
        /// <remarks/>
        public short BranchID {
            get {
                return this.branchIDField;
            }
            set {
                this.branchIDField = value;
            }
        }
        
        /// <remarks/>
        public int StoreID {
            get {
                return this.storeIDField;
            }
            set {
                this.storeIDField = value;
            }
        }
        
        /// <remarks/>
        public long InvHdrID {
            get {
                return this.invHdrIDField;
            }
            set {
                this.invHdrIDField = value;
            }
        }
        
        /// <remarks/>
        public long InvHdrIDServer {
            get {
                return this.invHdrIDServerField;
            }
            set {
                this.invHdrIDServerField = value;
            }
        }
        
        /// <remarks/>
        public long ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        public string ItemCode {
            get {
                return this.itemCodeField;
            }
            set {
                this.itemCodeField = value;
            }
        }
        
        /// <remarks/>
        public long LotID {
            get {
                return this.lotIDField;
            }
            set {
                this.lotIDField = value;
            }
        }
        
        /// <remarks/>
        public string LotCode {
            get {
                return this.lotCodeField;
            }
            set {
                this.lotCodeField = value;
            }
        }
        
        /// <remarks/>
        public string InvDate {
            get {
                return this.invDateField;
            }
            set {
                this.invDateField = value;
            }
        }
        
        /// <remarks/>
        public short MUnitPrimary {
            get {
                return this.mUnitPrimaryField;
            }
            set {
                this.mUnitPrimaryField = value;
            }
        }
        
        /// <remarks/>
        public decimal InvQty {
            get {
                return this.invQtyField;
            }
            set {
                this.invQtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal ERPQty {
            get {
                return this.eRPQtyField;
            }
            set {
                this.eRPQtyField = value;
            }
        }
        
        /// <remarks/>
        public short MUnitSecondary {
            get {
                return this.mUnitSecondaryField;
            }
            set {
                this.mUnitSecondaryField = value;
            }
        }
        
        /// <remarks/>
        public decimal InvQtySecondary {
            get {
                return this.invQtySecondaryField;
            }
            set {
                this.invQtySecondaryField = value;
            }
        }
        
        /// <remarks/>
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public long MobInvID {
            get {
                return this.mobInvIDField;
            }
            set {
                this.mobInvIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.8745")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ERPLot {
        
        private long lotIDField;
        
        private long itemIDField;
        
        private short compIDField;
        
        private string lotCodeField;
        
        private decimal widthField;
        
        private decimal lengthField;
        
        private string colorField;
        
        private string draftField;
        
        private decimal itemPrimaryQtyField;
        
        private decimal itemSecondaryQtyField;
        
        private string entryDateField;
        
        /// <remarks/>
        public long LotID {
            get {
                return this.lotIDField;
            }
            set {
                this.lotIDField = value;
            }
        }
        
        /// <remarks/>
        public long ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        public short CompID {
            get {
                return this.compIDField;
            }
            set {
                this.compIDField = value;
            }
        }
        
        /// <remarks/>
        public string LotCode {
            get {
                return this.lotCodeField;
            }
            set {
                this.lotCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public decimal Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        public string Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        public string Draft {
            get {
                return this.draftField;
            }
            set {
                this.draftField = value;
            }
        }
        
        /// <remarks/>
        public decimal ItemPrimaryQty {
            get {
                return this.itemPrimaryQtyField;
            }
            set {
                this.itemPrimaryQtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal ItemSecondaryQty {
            get {
                return this.itemSecondaryQtyField;
            }
            set {
                this.itemSecondaryQtyField = value;
            }
        }
        
        /// <remarks/>
        public string EntryDate {
            get {
                return this.entryDateField;
            }
            set {
                this.entryDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.8745")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ERPItem {
        
        private long itemIDField;
        
        private short compIDField;
        
        private string itemCodeField;
        
        private string itemDescField;
        
        private int mUnitPrimaryField;
        
        private int mUnitSecondaryField;
        
        private decimal mUnitsRelationField;
        
        private string mUnitDesc1Field;
        
        private string mUnitDesc2Field;
        
        private string entryDateField;
        
        /// <remarks/>
        public long ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        public short CompID {
            get {
                return this.compIDField;
            }
            set {
                this.compIDField = value;
            }
        }
        
        /// <remarks/>
        public string ItemCode {
            get {
                return this.itemCodeField;
            }
            set {
                this.itemCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ItemDesc {
            get {
                return this.itemDescField;
            }
            set {
                this.itemDescField = value;
            }
        }
        
        /// <remarks/>
        public int MUnitPrimary {
            get {
                return this.mUnitPrimaryField;
            }
            set {
                this.mUnitPrimaryField = value;
            }
        }
        
        /// <remarks/>
        public int MUnitSecondary {
            get {
                return this.mUnitSecondaryField;
            }
            set {
                this.mUnitSecondaryField = value;
            }
        }
        
        /// <remarks/>
        public decimal MUnitsRelation {
            get {
                return this.mUnitsRelationField;
            }
            set {
                this.mUnitsRelationField = value;
            }
        }
        
        /// <remarks/>
        public string MUnitDesc1 {
            get {
                return this.mUnitDesc1Field;
            }
            set {
                this.mUnitDesc1Field = value;
            }
        }
        
        /// <remarks/>
        public string MUnitDesc2 {
            get {
                return this.mUnitDesc2Field;
            }
            set {
                this.mUnitDesc2Field = value;
            }
        }
        
        /// <remarks/>
        public string EntryDate {
            get {
                return this.entryDateField;
            }
            set {
                this.entryDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.8745")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TInventoryHeader {
        
        private long invHdrIDField;
        
        private short compIDField;
        
        private short branchidField;
        
        private int storeidField;
        
        private string storeNameField;
        
        private string invDateField;
        
        private short invTypeField;
        
        private string invCommentsField;
        
        private short confirmedField;
        
        private long customerIDField;
        
        private short invStatusField;
        
        private string customerTitleField;
        
        private long mobInvHdrIDField;
        
        private long invSyncIDField;
        
        /// <remarks/>
        public long InvHdrID {
            get {
                return this.invHdrIDField;
            }
            set {
                this.invHdrIDField = value;
            }
        }
        
        /// <remarks/>
        public short CompID {
            get {
                return this.compIDField;
            }
            set {
                this.compIDField = value;
            }
        }
        
        /// <remarks/>
        public short Branchid {
            get {
                return this.branchidField;
            }
            set {
                this.branchidField = value;
            }
        }
        
        /// <remarks/>
        public int Storeid {
            get {
                return this.storeidField;
            }
            set {
                this.storeidField = value;
            }
        }
        
        /// <remarks/>
        public string StoreName {
            get {
                return this.storeNameField;
            }
            set {
                this.storeNameField = value;
            }
        }
        
        /// <remarks/>
        public string InvDate {
            get {
                return this.invDateField;
            }
            set {
                this.invDateField = value;
            }
        }
        
        /// <remarks/>
        public short InvType {
            get {
                return this.invTypeField;
            }
            set {
                this.invTypeField = value;
            }
        }
        
        /// <remarks/>
        public string InvComments {
            get {
                return this.invCommentsField;
            }
            set {
                this.invCommentsField = value;
            }
        }
        
        /// <remarks/>
        public short Confirmed {
            get {
                return this.confirmedField;
            }
            set {
                this.confirmedField = value;
            }
        }
        
        /// <remarks/>
        public long CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public short InvStatus {
            get {
                return this.invStatusField;
            }
            set {
                this.invStatusField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerTitle {
            get {
                return this.customerTitleField;
            }
            set {
                this.customerTitleField = value;
            }
        }
        
        /// <remarks/>
        public long MobInvHdrID {
            get {
                return this.mobInvHdrIDField;
            }
            set {
                this.mobInvHdrIDField = value;
            }
        }
        
        /// <remarks/>
        public long InvSyncID {
            get {
                return this.invSyncIDField;
            }
            set {
                this.invSyncIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.8745")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TItemLot {
        
        private long lotidField;
        
        private short compidField;
        
        private long itemidField;
        
        private string lotcodeField;
        
        private string lotdescField;
        
        private string lotcreatedateField;
        
        private string lotexpiredateField;
        
        private long prodorderidField;
        
        private decimal prodorderlotqtyField;
        
        private long erplotidField;
        
        private string dbreccreatedateField;
        
        private int dbreccreateuserField;
        
        private string dbrecmoddateField;
        
        private int dbrecmoduserField;
        
        private string dbreccreatehostField;
        
        private string dbrecmodhostField;
        
        /// <remarks/>
        public long lotid {
            get {
                return this.lotidField;
            }
            set {
                this.lotidField = value;
            }
        }
        
        /// <remarks/>
        public short compid {
            get {
                return this.compidField;
            }
            set {
                this.compidField = value;
            }
        }
        
        /// <remarks/>
        public long itemid {
            get {
                return this.itemidField;
            }
            set {
                this.itemidField = value;
            }
        }
        
        /// <remarks/>
        public string lotcode {
            get {
                return this.lotcodeField;
            }
            set {
                this.lotcodeField = value;
            }
        }
        
        /// <remarks/>
        public string lotdesc {
            get {
                return this.lotdescField;
            }
            set {
                this.lotdescField = value;
            }
        }
        
        /// <remarks/>
        public string lotcreatedate {
            get {
                return this.lotcreatedateField;
            }
            set {
                this.lotcreatedateField = value;
            }
        }
        
        /// <remarks/>
        public string lotexpiredate {
            get {
                return this.lotexpiredateField;
            }
            set {
                this.lotexpiredateField = value;
            }
        }
        
        /// <remarks/>
        public long prodorderid {
            get {
                return this.prodorderidField;
            }
            set {
                this.prodorderidField = value;
            }
        }
        
        /// <remarks/>
        public decimal prodorderlotqty {
            get {
                return this.prodorderlotqtyField;
            }
            set {
                this.prodorderlotqtyField = value;
            }
        }
        
        /// <remarks/>
        public long erplotid {
            get {
                return this.erplotidField;
            }
            set {
                this.erplotidField = value;
            }
        }
        
        /// <remarks/>
        public string dbreccreatedate {
            get {
                return this.dbreccreatedateField;
            }
            set {
                this.dbreccreatedateField = value;
            }
        }
        
        /// <remarks/>
        public int dbreccreateuser {
            get {
                return this.dbreccreateuserField;
            }
            set {
                this.dbreccreateuserField = value;
            }
        }
        
        /// <remarks/>
        public string dbrecmoddate {
            get {
                return this.dbrecmoddateField;
            }
            set {
                this.dbrecmoddateField = value;
            }
        }
        
        /// <remarks/>
        public int dbrecmoduser {
            get {
                return this.dbrecmoduserField;
            }
            set {
                this.dbrecmoduserField = value;
            }
        }
        
        /// <remarks/>
        public string dbreccreatehost {
            get {
                return this.dbreccreatehostField;
            }
            set {
                this.dbreccreatehostField = value;
            }
        }
        
        /// <remarks/>
        public string dbrecmodhost {
            get {
                return this.dbrecmodhostField;
            }
            set {
                this.dbrecmodhostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.8745")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://WMSSyncService.intranet.albio.gr/")]
    public partial class TransCodeHeader {
        
        private long ftrIDField;
        
        private short compidField;
        
        private short branchidField;
        
        private string tradecodeField;
        
        private int fromstoreidField;
        
        private int tostoreidField;
        
        private string branchnameField;
        
        private string transdateField;
        
        /// <remarks/>
        public long FtrID {
            get {
                return this.ftrIDField;
            }
            set {
                this.ftrIDField = value;
            }
        }
        
        /// <remarks/>
        public short compid {
            get {
                return this.compidField;
            }
            set {
                this.compidField = value;
            }
        }
        
        /// <remarks/>
        public short branchid {
            get {
                return this.branchidField;
            }
            set {
                this.branchidField = value;
            }
        }
        
        /// <remarks/>
        public string tradecode {
            get {
                return this.tradecodeField;
            }
            set {
                this.tradecodeField = value;
            }
        }
        
        /// <remarks/>
        public int fromstoreid {
            get {
                return this.fromstoreidField;
            }
            set {
                this.fromstoreidField = value;
            }
        }
        
        /// <remarks/>
        public int tostoreid {
            get {
                return this.tostoreidField;
            }
            set {
                this.tostoreidField = value;
            }
        }
        
        /// <remarks/>
        public string branchname {
            get {
                return this.branchnameField;
            }
            set {
                this.branchnameField = value;
            }
        }
        
        /// <remarks/>
        public string transdate {
            get {
                return this.transdateField;
            }
            set {
                this.transdateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void CheckDBConnectionCompletedEventHandler(object sender, CheckDBConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDBConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDBConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void ItemInfoCompletedEventHandler(object sender, ItemInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ItemInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ItemInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TItems Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TItems)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void GetOpenReceivesListCompletedEventHandler(object sender, GetOpenReceivesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenReceivesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenReceivesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void InsertNewReceivesTranscodeCompletedEventHandler(object sender, InsertNewReceivesTranscodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertNewReceivesTranscodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertNewReceivesTranscodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void ItemInfoByCodeCompletedEventHandler(object sender, ItemInfoByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ItemInfoByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ItemInfoByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TItems Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TItems)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void LotInfoCompletedEventHandler(object sender, LotInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LotInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LotInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TItemLot Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TItemLot)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void AtlSyncItemsAndLotsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void AtlGeInventoryCompletedEventHandler(object sender, AtlGeInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AtlGeInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AtlGeInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void LotInfoByCodeCompletedEventHandler(object sender, LotInfoByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LotInfoByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LotInfoByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TItemLot Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TItemLot)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void GetItemPartialCompletedEventHandler(object sender, GetItemPartialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemPartialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemPartialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void GetItemLotPartialCompletedEventHandler(object sender, GetItemLotPartialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemLotPartialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemLotPartialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void SyncERPItemsCompletedEventHandler(object sender, SyncERPItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncERPItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SyncERPItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void ImportInventoryHeaderCTypeCompletedEventHandler(object sender, ImportInventoryHeaderCTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportInventoryHeaderCTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportInventoryHeaderCTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void ImportInventoryCompletedEventHandler(object sender, ImportInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void ItemExistsCompletedEventHandler(object sender, ItemExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ItemExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ItemExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void LotExistsCompletedEventHandler(object sender, LotExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LotExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LotExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void InsertNewItemCompletedEventHandler(object sender, InsertNewItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertNewItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertNewItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void InsertNewLotCompletedEventHandler(object sender, InsertNewLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertNewLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertNewLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void ImportInventoryCTypeCompletedEventHandler(object sender, ImportInventoryCTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportInventoryCTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportInventoryCTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void SqlerrorlogCompletedEventHandler(object sender, SqlerrorlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SqlerrorlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SqlerrorlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void GetItemMunitsCompletedEventHandler(object sender, GetItemMunitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemMunitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemMunitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void GetSyncInfoCompletedEventHandler(object sender, GetSyncInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSyncInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSyncInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SyncInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SyncInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void SOA_GetStoresCompletedEventHandler(object sender, SOA_GetStoresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SOA_GetStoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SOA_GetStoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void UploadInventoryStatusCheckCompletedEventHandler(object sender, UploadInventoryStatusCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInventoryStatusCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInventoryStatusCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultWithMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultWithMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void SOA_GetItemsListCompletedEventHandler(object sender, SOA_GetItemsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SOA_GetItemsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SOA_GetItemsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ERPItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ERPItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void SOA_GetLotsListCompletedEventHandler(object sender, SOA_GetLotsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SOA_GetLotsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SOA_GetLotsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ERPLot[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ERPLot[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void ClearitemlistCompletedEventHandler(object sender, ClearitemlistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearitemlistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearitemlistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void ClearlotlistCompletedEventHandler(object sender, ClearlotlistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearlotlistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearlotlistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void InsertTransCodeDetailsCompletedEventHandler(object sender, InsertTransCodeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTransCodeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTransCodeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void InsertTransCodeHeaderCompletedEventHandler(object sender, InsertTransCodeHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTransCodeHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTransCodeHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void SOA_GetLotsCompletedEventHandler(object sender, SOA_GetLotsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SOA_GetLotsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SOA_GetLotsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void SOA_GetERPLotSecondQTYCompletedEventHandler(object sender, SOA_GetERPLotSecondQTYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SOA_GetERPLotSecondQTYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SOA_GetERPLotSecondQTYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void GetTransCodeDetailsCompletedEventHandler(object sender, GetTransCodeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransCodeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransCodeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransCodeDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransCodeDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void InsertIntoReceivesCompletedEventHandler(object sender, InsertIntoReceivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertIntoReceivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertIntoReceivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    public delegate void GetTransRemainsCompletedEventHandler(object sender, GetTransRemainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8745")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransRemainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransRemainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591